@startuml
left to right direction
skinparam backgroundColor transparent
skinparam arrowFontColor royalblue

together {
    class Prenda {
        colorPrimario : Color
        colorSecundario : Color
        temperaturaMaxima
        categoria() : Categoria
    }

    enum Trama {
        LISA,
        RAYADA,
        LUNARES,
        CUADROS,
        ESTAMPADO
    }

    enum Material {
        GABARDINA,
        NYLON,
        ALGODON,
        JEAN
        ...
    }

    enum Tipo {
        PANTALON,
        REMERA,
        ...

        categoria() : Categoria
        admiteMaterial() : boolean
    }

    enum Categoria {
        SUPERIOR,
        CALZADO,
        INFERIOR,
        ACCESORIO
    }

    Prenda --> "1" Material
    Prenda --> "1" Trama
    Prenda --> "1" Tipo

    Prenda ..> Categoria

    Tipo --> "1" Categoria
    Tipo --> "*" Material
}

class Borrador {
    trama
    material
    tipo
    colorPrimario
    colorSecundario
    temperaturaMaxima

    crearPrenda() : Prenda
}

interface GeneradorAtuendos {
    generarSugerencias() : Collection<Atuendo>
}

class Atuendo {
}

interface ServicioClima {
    temperatura(ciudad, now)
}

class ServicioClimaAccuWeather {
    implementation
    temperatura(ciudad, now)
}

class "CacheResultados<K, V>" as CacheResultados_K_V {
    get(K) : V
    size()
}

class "CacheEntry<V>" as CacheEntry_V {
    resultado : V
    expiro(now) : boolean
    get() : V
}

class AccuWeatherAPI {
    getWeather(ciudad)
}

Borrador ..> Prenda

Atuendo --> "1" Prenda : parteSuperior
Atuendo --> "1" Prenda : parteInferior
Atuendo --> "1" Prenda : calzado
Atuendo --> "1" Prenda : accesorio

GeneradorAtuendos --> ServicioClima
GeneradorAtuendos ..> Atuendo

ServicioClimaAccuWeather ..|> ServicioClima
ServicioClimaAccuWeather --> CacheResultados_K_V
ServicioClimaAccuWeather --> AccuWeatherAPI

CacheResultados_K_V --> "*" CacheEntry_V

@enduml
