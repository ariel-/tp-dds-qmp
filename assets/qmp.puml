@startuml
left to right direction
skinparam backgroundColor transparent
skinparam arrowFontColor royalblue

together {
    class Prenda {
        colorPrimario : Color
        colorSecundario : Color
        temperaturaMaxima
        categoria() : Categoria
    }

    enum Trama {
        LISA,
        RAYADA,
        LUNARES,
        CUADROS,
        ESTAMPADO
    }

    enum Material {
        GABARDINA,
        NYLON,
        ALGODON,
        JEAN
        ...
    }

    enum Tipo {
        PANTALON,
        REMERA,
        ...

        categoria() : Categoria
        admiteMaterial() : boolean
    }

    enum Categoria {
        SUPERIOR,
        CALZADO,
        INFERIOR,
        ACCESORIO
    }

    Prenda --> "1" Material
    Prenda --> "1" Trama
    Prenda --> "1" Tipo

    Prenda ..> Categoria

    Tipo --> "1" Categoria
    Tipo --> "*" Material
}

class Borrador {
    trama
    material
    tipo
    colorPrimario
    colorSecundario
    temperaturaMaxima

    crearPrenda() : Prenda
}

interface GeneradorAtuendos {
    generarAtuendoDesde(List<Prenda>) : Atuendo
}

class Atuendo {
}

enum AlertaMeteorologico {
    TORMENTA,
    GRANIZO,
    ...
}

class EstadoClima {
    temperatura
    alertas
}

interface ServicioClima {
    estadoClimatico(ciudad, now) : EstadoClima
}

Borrador ..> Prenda

Atuendo --> "1" Prenda : parteSuperior
Atuendo --> "1" Prenda : parteInferior
Atuendo --> "1" Prenda : calzado
Atuendo --> "1" Prenda : accesorio

GeneradorAtuendos ..> Prenda
GeneradorAtuendos ..> Atuendo

EstadoClima --> "*" AlertaMeteorologico

ServicioClima ..> EstadoClima

class Persona {
    guardarropas : Set<Guardarropa>
    propuestas : Set<Propuesta>

    agregarGuardarropa()
    quitarGuardarropa()
    getPropuestasPendientes() : List<Propuesta>
    aceptarPropuesta(Propuesta)
    rechazarPropuesta(Propuesta)
}

' Command pattern :)
abstract class Propuesta {
    aplicada : boolean

    {abstract} apply()
    {abstract} undo()
    aceptarPropuesta()
    deshacerPropuesta()
    estaPendiente()
}

class Guardarropa {
    nombre : String
    prendas : List<Prenda>

    agregarPrenda(Prenda)
    sugerirAtuendo() : Atuendo
}

Guardarropa --> GeneradorAtuendos
Guardarropa --> ServicioClima
Guardarropa --> "*" Prenda
Guardarropa ..> Atuendo

Persona --> "*" Propuesta
Persona --> "*" Guardarropa
@enduml
